# Generated by Django 3.1.4 on 2021-01-18 23:23

from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import document.models
import simple_history.models


class Migration(migrations.Migration):

    dependencies = [
        ('document', '0016_auto_20210117_0159'),
        ('inventory', '0011_movement_tax_already_included'),
        ('finance', '0008_auto_20210115_1308'),
        ('person', '0008_auto_20210111_1225'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('warehouse', '0003_auto_20210106_1432'),
        ('company', '0003_company_logo'),
        ('audit', '0006_historicalcompany_logo'),
    ]

    operations = [
        migrations.CreateModel(
            name='HistoricalPerson',
            fields=[
                ('id', models.IntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                ('tags', models.CharField(blank=True, editable=False, max_length=700)),
                ('identification', models.CharField(max_length=50, verbose_name='identificación')),
                ('name', models.CharField(max_length=100, verbose_name='nombre')),
                ('business_name', models.CharField(blank=True, max_length=100, verbose_name='nombre comercial')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='correo electrónico')),
                ('phone', models.CharField(blank=True, max_length=20, verbose_name='teléfono')),
                ('credit_limit', models.DecimalField(blank=True, decimal_places=2, default=0, help_text='Límite de crédito permitido para esta persona.', max_digits=22, validators=[django.core.validators.MinValueValidator(0)], verbose_name='límite de crédito')),
                ('credit_limit_days', models.IntegerField(blank=True, default=0, validators=[django.core.validators.MinValueValidator(0)], verbose_name='tiempo límite de crédito en días')),
                ('is_supplier', models.BooleanField(default=False, help_text='puede indicar si esta persona también es un suplidor.', verbose_name='es suplidor')),
                ('is_active', models.BooleanField(default=True, verbose_name='activo')),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField()),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('company', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='company.company', verbose_name='Empresa')),
                ('contact_person', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='person.person', verbose_name='persona de contacto')),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('identification_type', models.ForeignKey(blank=True, db_constraint=False, default=None, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='person.identificationtype')),
            ],
            options={
                'verbose_name': 'historical persona',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': 'history_date',
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='HistoricalMovement',
            fields=[
                ('id', models.IntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                ('tags', models.CharField(blank=True, editable=False, max_length=700)),
                ('number', models.IntegerField(default=1, editable=False, verbose_name='número')),
                ('name', models.CharField(blank=True, max_length=70, verbose_name='nombre')),
                ('quantity', models.DecimalField(decimal_places=2, max_digits=12, validators=[django.core.validators.MinValueValidator(0)], verbose_name='cantidad')),
                ('price', models.DecimalField(decimal_places=2, max_digits=22, validators=[django.core.validators.MinValueValidator(0)], verbose_name='precio')),
                ('discount', models.DecimalField(decimal_places=2, max_digits=22, validators=[django.core.validators.MinValueValidator(0)], verbose_name='descuento')),
                ('tax', models.DecimalField(blank=True, decimal_places=2, default=0, editable=False, max_digits=22, validators=[django.core.validators.MinValueValidator(0)], verbose_name='impuesto')),
                ('tax_already_included', models.BooleanField(default=False, help_text='Indica que el impuesto ya está incluido en el monto (precio) especificado, entonces se extraerá el impuesto del monto indicado (si aplica).', verbose_name='impuesto ya incluido')),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField()),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('document', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='document.document')),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('item', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='inventory.item', verbose_name='artículo')),
            ],
            options={
                'verbose_name': 'historical movimiento',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': 'history_date',
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='HistoricalItemGroup',
            fields=[
                ('id', models.IntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                ('tags', models.CharField(blank=True, editable=False, max_length=700)),
                ('name', models.CharField(max_length=50, verbose_name='grupo')),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField()),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('company', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='company.company', verbose_name='Empresa')),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'historical grupo',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': 'history_date',
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='HistoricalItemFamily',
            fields=[
                ('id', models.IntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                ('tags', models.CharField(blank=True, editable=False, max_length=700)),
                ('name', models.CharField(max_length=50, verbose_name='familia')),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField()),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('company', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='company.company', verbose_name='Empresa')),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'historical familia',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': 'history_date',
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='HistoricalItem',
            fields=[
                ('id', models.IntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                ('tags', models.CharField(blank=True, editable=False, max_length=700)),
                ('code', models.CharField(editable=False, max_length=8, verbose_name='código')),
                ('codename', models.CharField(help_text='Puede ser el módelo, serie, identificador, etc. Esta referencia debería ser única pero puede tener artículos con la misma referencia si así lo desea. Unolet le advertirá antes de crear un artículo con una referencia que ya existe para evitar duplicados no deseados.', max_length=30, verbose_name='referencia')),
                ('name', models.CharField(max_length=70, verbose_name='nombre')),
                ('description', models.CharField(blank=True, max_length=500, verbose_name='descripción')),
                ('min_price', models.DecimalField(blank=True, decimal_places=2, default=0, max_digits=22, verbose_name='precio mínimo')),
                ('max_price', models.DecimalField(blank=True, decimal_places=2, default=0, max_digits=22, verbose_name='precio máximo')),
                ('available', models.DecimalField(blank=True, decimal_places=2, default=0, editable=False, max_digits=22, verbose_name='disponible')),
                ('is_active', models.BooleanField(default=True, verbose_name='activo')),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField()),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('company', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='company.company', verbose_name='Empresa')),
                ('family', models.ForeignKey(blank=True, db_constraint=False, help_text='Puede ser la marca del fabricante.', null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='inventory.itemfamily', verbose_name='familia')),
                ('group', models.ForeignKey(blank=True, db_constraint=False, help_text='grupo de artículos al que pertenece.', null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='inventory.itemgroup', verbose_name='grupo')),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('tax', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='finance.tax')),
            ],
            options={
                'verbose_name': 'historical artículo',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': 'history_date',
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='HistoricalIdentificationType',
            fields=[
                ('id', models.IntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                ('tags', models.CharField(blank=True, editable=False, max_length=700)),
                ('name', models.CharField(max_length=50, verbose_name='nombre')),
                ('characters', models.CharField(default='0123456789', help_text='Indique los caracteres que desea permitir o prohibir.', max_length=500, verbose_name='caracteres permitidos')),
                ('mode', models.CharField(blank=True, choices=[('allowed', 'Permitir'), ('not_allowed', 'Prohibir')], default='allowed', max_length=20, verbose_name='modo')),
                ('max_length', models.IntegerField(blank=True, default=11, help_text='Longitud máxima permitida.', null=True, validators=[django.core.validators.MinValueValidator(0)], verbose_name='Longitud máxima')),
                ('min_length', models.IntegerField(blank=True, default=11, help_text='Longitud mínima permitida.', null=True, validators=[django.core.validators.MinValueValidator(0)], verbose_name='Longitud mínima')),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField()),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('company', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='company.company', verbose_name='Empresa')),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'historical tipo de identificación',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': 'history_date',
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='HistoricalDocumentType',
            fields=[
                ('id', models.IntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                ('tags', models.CharField(blank=True, editable=False, max_length=700)),
                ('code', models.CharField(max_length=6, verbose_name='código')),
                ('name', models.CharField(max_length=70, verbose_name='nombre')),
                ('generic_type', models.CharField(choices=[('invoice', 'Factura'), ('invoice_return', 'Devolución en factura'), ('purchase', 'Compra'), ('purchase_order', 'Orden de compra'), ('quotation', 'Cotización'), ('inventory_input', 'Entrada de inventario'), ('inventory_output', 'Salida de inventario'), ('transfer', 'Transferencia de inventario'), ('accounting_income', 'Ingreso contable'), ('accounting_expense', 'Gasto contable')], help_text='tipo genérico al que pertenece.', max_length=20, verbose_name='tipo genérico')),
                ('affect_cost', models.BooleanField(default=False, help_text='indica si el costo promedio de los artículos será calculado.', verbose_name='afecta el costo')),
                ('is_active', models.BooleanField(default=True, verbose_name='activo')),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField()),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('company', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='company.company', verbose_name='Empresa')),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('tax_receipt', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='finance.taxreceipt', verbose_name='comprobante fiscal')),
            ],
            options={
                'verbose_name': 'historical tipo de documento',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': 'history_date',
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='HistoricalDocument',
            fields=[
                ('id', models.IntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                ('tags', models.CharField(blank=True, editable=False, max_length=700)),
                ('number', models.IntegerField(editable=False, verbose_name='número')),
                ('person_name', models.CharField(blank=True, max_length=100, verbose_name='nombre de la persona')),
                ('note', models.CharField(blank=True, max_length=500, verbose_name='nota')),
                ('currency_rate', models.DecimalField(blank=True, decimal_places=2, default=1, max_digits=10, null=True, validators=[django.core.validators.MinValueValidator(0)], verbose_name='tasa de cambio')),
                ('pay_taxes', models.BooleanField(default=True, help_text='Determina si este documento paga impuestos.', verbose_name='Paga impuestos')),
                ('amount', models.DecimalField(blank=True, decimal_places=2, editable=False, max_digits=32, null=True, verbose_name='importe')),
                ('discount', models.DecimalField(blank=True, decimal_places=2, editable=False, max_digits=32, null=True, verbose_name='descuento')),
                ('tax', models.DecimalField(blank=True, decimal_places=2, editable=False, max_digits=32, null=True, verbose_name='impuesto')),
                ('total', models.DecimalField(blank=True, decimal_places=2, editable=False, max_digits=32, null=True, verbose_name='total')),
                ('create_date', models.DateTimeField(blank=True, editable=False, verbose_name='fecha de creación')),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField()),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('create_user', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('currency', models.ForeignKey(blank=True, db_constraint=False, default=document.models.get_default_currency, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='finance.currency', verbose_name='moneda')),
                ('doctype', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='document.documenttype', verbose_name='tipo')),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('person', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='person.person', verbose_name='persona')),
                ('tax_receipt_number', models.ForeignKey(blank=True, db_constraint=False, editable=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='finance.taxreceiptnumber', verbose_name='Número de comprobante fiscal')),
                ('transfer_warehouse', models.ForeignKey(blank=True, db_constraint=False, default=None, help_text='almacén a transferir.', null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='warehouse.warehouse')),
                ('warehouse', models.ForeignKey(blank=True, db_constraint=False, help_text='almacén del documento.', null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='warehouse.warehouse')),
            ],
            options={
                'verbose_name': 'historical documento',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': 'history_date',
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
    ]
