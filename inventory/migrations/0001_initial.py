# Generated by Django 3.1.4 on 2021-01-04 16:39

import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import inventory.models
import unoletutils.libs.text


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('company', '0001_initial'),
        ('finance', '0001_initial'),
        ('document', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='Item',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('tags', models.CharField(max_length=700)),
                ('code', models.CharField(editable=False, max_length=8, verbose_name='código')),
                ('codename', models.CharField(help_text='Puede ser el módelo, serie, identificador, etc. Esta referencia debería ser única pero puede tener artículos con la misma referencia si así lo desea. Unolet le advertirá antes de crear un artículo con una referencia que ya existe para evitar duplicados no deseados.', max_length=30, verbose_name='referencia')),
                ('name', models.CharField(max_length=70, verbose_name='nombre')),
                ('description', models.CharField(blank=True, max_length=500, verbose_name='descripción')),
                ('company', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='company.company', verbose_name='Empresa')),
            ],
            options={
                'verbose_name': 'artículo',
                'verbose_name_plural': 'artículos',
                'ordering': ['code'],
            },
            bases=(models.Model, unoletutils.libs.text.Text),
        ),
        migrations.CreateModel(
            name='Movement',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('tags', models.CharField(max_length=700)),
                ('number', models.IntegerField(default=1, verbose_name='número')),
                ('quantity', models.DecimalField(decimal_places=2, max_digits=12, validators=[django.core.validators.MinValueValidator(0)], verbose_name='cantidad')),
                ('price', models.DecimalField(decimal_places=2, max_digits=22, validators=[django.core.validators.MinValueValidator(0)], verbose_name='precio')),
                ('discount', models.DecimalField(decimal_places=2, max_digits=22, validators=[django.core.validators.MinValueValidator(0)], verbose_name='descuento')),
                ('tax', models.DecimalField(decimal_places=2, max_digits=22, validators=[django.core.validators.MinValueValidator(0)], verbose_name='impuesto')),
                ('currency_rate', models.DecimalField(decimal_places=2, default=1, max_digits=10, validators=[django.core.validators.MinValueValidator(1)], verbose_name='tasa de cambio')),
                ('currency', models.ForeignKey(default=inventory.models.get_default_currency, null=True, on_delete=django.db.models.deletion.PROTECT, to='finance.currency', verbose_name='moneda')),
                ('document', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='document.document')),
                ('item', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='inventory.item', verbose_name='artículo')),
            ],
            options={
                'verbose_name': 'movimiento',
                'verbose_name_plural': 'movimientos',
                'ordering': ['number'],
            },
            bases=(models.Model, unoletutils.libs.text.Text),
        ),
        migrations.CreateModel(
            name='ItemGroup',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('tags', models.CharField(max_length=700)),
                ('name', models.CharField(max_length=50, verbose_name='grupo')),
                ('company', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='company.company', verbose_name='Empresa')),
            ],
            options={
                'verbose_name': 'grupo',
                'verbose_name_plural': 'grupos',
            },
            bases=(models.Model, unoletutils.libs.text.Text),
        ),
        migrations.CreateModel(
            name='ItemFamily',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('tags', models.CharField(max_length=700)),
                ('name', models.CharField(max_length=50, verbose_name='familia')),
                ('company', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='company.company', verbose_name='Empresa')),
            ],
            options={
                'verbose_name': 'familia',
                'verbose_name_plural': 'familias',
            },
            bases=(models.Model, unoletutils.libs.text.Text),
        ),
        migrations.AddField(
            model_name='item',
            name='family',
            field=models.ForeignKey(blank=True, help_text='familia de artículos al que pertenece. Puede ser la marca del fabricante.', null=True, on_delete=django.db.models.deletion.SET_NULL, to='inventory.itemfamily'),
        ),
        migrations.AddField(
            model_name='item',
            name='group',
            field=models.ForeignKey(blank=True, help_text='grupo de artículos al que pertenece.', null=True, on_delete=django.db.models.deletion.SET_NULL, to='inventory.itemgroup'),
        ),
        migrations.AddConstraint(
            model_name='itemgroup',
            constraint=models.UniqueConstraint(fields=('company', 'name'), name='unique_company_group'),
        ),
        migrations.AddConstraint(
            model_name='itemfamily',
            constraint=models.UniqueConstraint(fields=('company', 'name'), name='unique_company_family'),
        ),
        migrations.AddConstraint(
            model_name='item',
            constraint=models.UniqueConstraint(fields=('company', 'code'), name='unique_company_item'),
        ),
    ]
